import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import gql from "graphql-tag";
import { useQuery } from "@apollo/client";

const productList = gql`
	query Products {
		allProducts {
			id
			name
			descriptionShort
		}
	}
`;

interface IProduct {
	id: string;
	name: string;
	descriptionShort: string;
}

const Home: NextPage = () => {
	const { data, loading, error } = useQuery(productList, {
		fetchPolicy: "cache-and-network",
	});

	return (
		<div className={styles.container}>
			<Head>
				<title>Product App App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}>Product App</h1>
				<p className={styles.description}>
					Get started by editing{" "}
					<code className={styles.code}>pages/index.tsx</code>
				</p>

				{loading && <p>Loading...</p>}

				{error && <p>Eror occured while fetching data </p>}

				<div className={styles.grid}>
					{data &&
						data?.allProducts?.map(
							(
								{ id, name, descriptionShort }: IProduct,
								i: string
							) => (
								<Link
									key={i}
									href="/product/[id]"
									as={`/product/${id}`}
								>
									<a className={styles.card}>
										<h2>{name}</h2>
										<p>{descriptionShort}</p>
									</a>
								</Link>
							)
						)}
				</div>
			</main>

			<footer className={styles.footer}>
				<a
					href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
					target="_blank"
					rel="noopener noreferrer"
				>
					Powered by{" "}
					<span className={styles.logo}>
						<Image
							src="/vercel.svg"
							alt="Vercel Logo"
							width={72}
							height={16}
						/>
					</span>
				</a>
			</footer>
		</div>
	);
};

export default Home;
